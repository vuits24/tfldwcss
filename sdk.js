let wasm_bindgen;(function(){const n={};let F;typeof document<"u"&&document.currentScript!==null&&(F=new URL(document.currentScript.src,location.href).toString());let b;const l=new Array(128).fill(void 0);l.push(void 0,null,!0,!1);function Z(I){return l[I]}let s=l.length;function h(I){I<132||(l[I]=s,s=I)}function K(I){const A=Z(I);return h(I),A}function J(I){s===l.length&&l.push(l.length+1);const A=s;return s=l[A],l[A]=I,A}const a=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&a.decode();let c=null;function Y(){return(c===null||c.byteLength===0)&&(c=new Uint8Array(b.memory.buffer)),c}function w(I,A){return I=I>>>0,a.decode(Y().subarray(I,I+A))}function R(I){const A=typeof I;if(A=="number"||A=="boolean"||I==null)return`${I}`;if(A=="string")return`"${I}"`;if(A=="symbol"){const i=I.description;return i==null?"Symbol":`Symbol(${i})`}if(A=="function"){const i=I.name;return typeof i=="string"&&i.length>0?`Function(${i})`:"Function"}if(Array.isArray(I)){const i=I.length;let m="[";i>0&&(m+=R(I[0]));for(let o=1;o<i;o++)m+=", "+R(I[o]);return m+="]",m}const g=/\[object ([^\]]+)\]/.exec(toString.call(I));let C;if(g.length>1)C=g[1];else return toString.call(I);if(C=="Object")try{return"Object("+JSON.stringify(I)+")"}catch{return"Object"}return I instanceof Error?`${I.name}: ${I.message}
${I.stack}`:C}let d=0;const y=typeof TextEncoder<"u"?new TextEncoder("utf-8"):{encode:()=>{throw Error("TextEncoder not available")}},E=typeof y.encodeInto=="function"?function(I,A){return y.encodeInto(I,A)}:function(I,A){const g=y.encode(I);return A.set(g),{read:I.length,written:g.length}};function V(I,A,g){if(g===void 0){const B=y.encode(I),G=A(B.length,1)>>>0;return Y().subarray(G,G+B.length).set(B),d=B.length,G}let C=I.length,i=A(C,1)>>>0;const m=Y();let o=0;for(;o<C;o++){const B=I.charCodeAt(o);if(B>127)break;m[i+o]=B}if(o!==C){o!==0&&(I=I.slice(o)),i=g(i,C,C=o+I.length*3,1)>>>0;const B=Y().subarray(i+o,i+C),G=E(I,B);o+=G.written,i=g(i,C,o,1)>>>0}return d=o,i}let W=null;function X(){return(W===null||W.byteLength===0)&&(W=new Int32Array(b.memory.buffer)),W}let Q=null;function t(){return(Q===null||Q.byteLength===0)&&(Q=new Uint32Array(b.memory.buffer)),Q}function N(I,A){const g=A(I.length*4,4)>>>0,C=t();for(let i=0;i<I.length;i++)C[g/4+i]=J(I[i]);return d=I.length,g}function j(I,A){try{return I.apply(this,A)}catch(g){b.__wbindgen_exn_store(J(g))}}const u=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(I=>b.__wbg_tflcss_free(I>>>0));class p{__destroy_into_raw(){const A=this.__wbg_ptr;return this.__wbg_ptr=0,u.unregister(this),A}free(){const A=this.__destroy_into_raw();b.__wbg_tflcss_free(A)}constructor(){const A=b.tflcss_new();return this.__wbg_ptr=A>>>0,this}execute(A,g){try{const o=b.__wbindgen_add_to_stack_pointer(-16),B=V(A,b.__wbindgen_malloc,b.__wbindgen_realloc),G=d,O=N(g,b.__wbindgen_malloc),k=d;b.tflcss_execute(o,this.__wbg_ptr,B,G,O,k);var C=X()[o/4+0],i=X()[o/4+1],m=X()[o/4+2];if(m)throw K(i);return K(C)}finally{b.__wbindgen_add_to_stack_pointer(16)}}}n.TFLCss=p;async function e(I,A){if(typeof Response=="function"&&I instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(I,A)}catch(C){if(I.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",C);else throw C}const g=await I.arrayBuffer();return await WebAssembly.instantiate(g,A)}else{const g=await WebAssembly.instantiate(I,A);return g instanceof WebAssembly.Instance?{instance:g,module:I}:g}}function H(){const I={};return I.wbg={},I.wbg.__wbindgen_object_drop_ref=function(A){K(A)},I.wbg.__wbg_eval_4ad73ac086e3e772=function(A,g){const C=window.eval(w(A,g));return J(C)},I.wbg.__wbg_new_75208e29bddfd88c=function(){const A=new Array;return J(A)},I.wbg.__wbg_push_0239ee92f127e807=function(A,g){return Z(A).push(Z(g))},I.wbg.__wbg_from_58c79ccfb68060f5=function(A){const g=Array.from(Z(A));return J(g)},I.wbg.__wbindgen_object_clone_ref=function(A){const g=Z(A);return J(g)},I.wbg.__wbg_instanceof_Object_4abbcd5d20d5f7df=function(A){let g;try{g=Z(A)instanceof Object}catch{g=!1}return g},I.wbg.__wbindgen_string_new=function(A,g){const C=w(A,g);return J(C)},I.wbg.__wbg_get_3fddfed2c83f434c=function(){return j(function(A,g){const C=Reflect.get(Z(A),Z(g));return J(C)},arguments)},I.wbg.__wbindgen_is_function=function(A){return typeof Z(A)=="function"},I.wbg.__wbg_apply_fa968ef250133e31=function(){return j(function(A,g,C){const i=Reflect.apply(Z(A),Z(g),Z(C));return J(i)},arguments)},I.wbg.__wbindgen_debug_string=function(A,g){const C=R(Z(g)),i=V(C,b.__wbindgen_malloc,b.__wbindgen_realloc),m=d;X()[A/4+1]=m,X()[A/4+0]=i},I.wbg.__wbindgen_throw=function(A,g){throw new Error(w(A,g))},I}function z(I,A){}function L(I,A){return b=I.exports,S.__wbindgen_wasm_module=A,W=null,Q=null,c=null,b}function x(I){if(b!==void 0)return b;const A=H();I instanceof WebAssembly.Module||(I=new WebAssembly.Module(I));const g=new WebAssembly.Instance(I,A);return L(g,I)}async function S(I){if(b!==void 0)return b;typeof I>"u"&&typeof F<"u"&&(I="data:application/wasm;base64,");const A=H();(typeof I=="string"||typeof Request=="function"&&I instanceof Request||typeof URL=="function"&&I instanceof URL)&&(I=fetch(I));const{instance:g,module:C}=await e(await I,A);return L(g,C)}wasm_bindgen=Object.assign(S,{initSync:x},n),wasm_bindgen().then(()=>{window.addEventListener("load",()=>{var I=new wasm_bindgen.TFLCss;I.execute("loadEventDom",[]),window.tfl_css=I,window.dispatchEvent(new Event("loaded_tfl_css"))})})})();
