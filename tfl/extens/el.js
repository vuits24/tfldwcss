function $el(elname,attrs=[],cbc,cbac){attrs=attrs||[],"string"==typeof attrs&&(attrs=attrs.split(",").filter((t=>t))),attrs.push("t-options"),attrs=[...new Set(attrs)];class MyCustomElement extends HTMLElement{static observedAttributes=attrs;constructor(){super(),this.self=this.attachShadow({mode:"open"})}connectedCallback(){const t=this.self;"function"==typeof cbc&&cbc(t),setTimeout((()=>{$css?.storeCss(t)}))}disconnectedCallback(){console.log("Custom element removed from page.")}adoptedCallback(){console.log("Custom element moved to new page.")}attributeChangedCallback(t,e,s){const o=this.self;"function"==typeof cbac&&cbac(o,t,s,e)}options(){var str=this.getAttribute("t-options")||"",rs={};try{return str&&"{"!=str[0]&&(str=`{${str}}`),eval(`rs=${str}`),rs}catch{return rs}}}customElements.define(elname,MyCustomElement)}
